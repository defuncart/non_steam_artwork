name: cd_main
on:
  push:
    tags:
      - '*'
env:
  BUILD_PATH_LINUX: build/linux/x64/release/bundle/
  BUILD_NAME_LINUX: non_steam_artwork
  ARTIFACT_NAME: non_steam_artwork
permissions:
  contents: write
jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: true # change to false once production ready
          generate_release_notes: false
  build_linux:
    name: Build + Upload Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: kuhnroyal/flutter-fvm-config-action@v1
        id: fvm-config-action
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.fvm-config-action.outputs.FLUTTER_VERSION }}
          channel: ${{ steps.fvm-config-action.outputs.FLUTTER_CHANNEL }}
      - name: Generate loca
        run: sh bin/loca_generate.sh true
      - name: Install packages
        run: flutter pub get
      # https://docs.flutter.dev/get-started/install/linux#linux-prerequisites
      - name: Install dependencies for Linux
        run: |
          sudo apt-get update
          sudo apt-get install --fix-missing
          sudo apt-get install clang cmake git ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev
      - name: Build Linux
        run: flutter build linux --release
      - name: Construct full artifact name
        run: echo "ARTIFACT_FULL_NAME=${{ env.ARTIFACT_NAME }}_linux.zip" >> $GITHUB_ENV
      - name: Create zip
        run: |
            cd ${{ env.BUILD_PATH_LINUX }}
            zip -r ${{ env.ARTIFACT_FULL_NAME }} .
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: ${{ env.BUILD_PATH_LINUX }}/${{ env.ARTIFACT_FULL_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
